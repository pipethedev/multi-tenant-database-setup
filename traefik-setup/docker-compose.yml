version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    ports:
      - "8181:80"
      - "8182:443"
      - "5432:5432"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
      - ./certs:/certs
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik
      - --providers.file.watch=true
      - --entrypoints.postgres.address=:5432
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=hello@brimble.app
      - --certificatesresolvers.letsencrypt.acme.storage=/certs/acme.json
    networks:
      - postgres-network
    restart: unless-stopped

  postgres-a:
    image: postgres:15-alpine
    container_name: postgres-a
    environment:
      POSTGRES_DB: testdb_a
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_a_data:/var/lib/postgresql/data
    networks:
      - postgres-network
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres-a.rule=HostSNI(`x.brimble.app`)"
      - "traefik.tcp.routers.postgres-a.entrypoints=postgres"
      - "traefik.tcp.routers.postgres-a.service=postgres-a"
      - "traefik.tcp.services.postgres-a.loadbalancer.server.port=5432"
    restart: unless-stopped

  postgres-b:
    image: postgres:15-alpine
    container_name: postgres-b
    environment:
      POSTGRES_DB: testdb_b
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_b_data:/var/lib/postgresql/data
    networks:
      - postgres-network
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres-b.rule=HostSNI(`y.brimble.app`)"
      - "traefik.tcp.routers.postgres-b.entrypoints=postgres"
      - "traefik.tcp.routers.postgres-b.service=postgres-b"
      - "traefik.tcp.services.postgres-b.loadbalancer.server.port=5432"
    restart: unless-stopped

  postgres-c:
    image: postgres:15-alpine
    container_name: postgres-c
    environment:
      POSTGRES_DB: testdb_c
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_c_data:/var/lib/postgresql/data
    networks:
      - postgres-network
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres-c.rule=HostSNI(`z.brimble.app`)"
      - "traefik.tcp.routers.postgres-c.entrypoints=postgres"
      - "traefik.tcp.routers.postgres-c.service=postgres-c"
      - "traefik.tcp.services.postgres-c.loadbalancer.server.port=5432"
    restart: unless-stopped

volumes:
  postgres_a_data:
  postgres_b_data:
  postgres_c_data:

networks:
  postgres-network:
    driver: bridge